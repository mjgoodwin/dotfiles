checking build system type... i386-apple-darwin13.0.2
checking host system type... i386-apple-darwin13.0.2
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... config/install-sh -c -d
checking for gawk... no
checking for mawk... no
checking for nawk... no
checking for awk... awk
checking whether make sets $(MAKE)... yes
checking whether to enable maintainer-specific portions of Makefiles... no
checking for gcc... clang
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether clang accepts -g... yes
checking for clang option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of clang... none
checking whether clang and cc understand -c and -o together... yes
checking for C compiler warning flags... -Wall -W
checking whether ln -s works... yes
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/local/Library/ENV/4.3/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by clang... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
checking if the linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) is GNU ld... no
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm
checking the name lister (/usr/bin/nm) interface... BSD nm
checking the maximum length of command line arguments... 196608
checking whether the shell understands some XSI constructs... yes
checking whether the shell understands "+="... yes
checking how to convert i386-apple-darwin13.0.2 file names to i386-apple-darwin13.0.2 format... func_convert_file_noop
checking how to convert i386-apple-darwin13.0.2 file names to toolchain format... func_convert_file_noop
checking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld option to reload object files... -r
checking for objdump... no
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for ar... ar
checking for archiver @FILE support... no
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm output from clang object... ok
checking for sysroot... no
checking for mt... no
checking if : is a manifest tool... no
checking for dsymutil... dsymutil
checking for nmedit... nmedit
checking for lipo... lipo
checking for otool... otool
checking for otool64... no
checking for -single_module linker flag... yes
checking for -exported_symbols_list linker flag... yes
checking for -force_load linker flag... yes
checking how to run the C preprocessor... clang -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if clang supports -fno-rtti -fno-exceptions... yes
checking for clang option to produce PIC... -fno-common -DPIC
checking if clang PIC flag -fno-common -DPIC works... yes
checking if clang static flag -static works... no
checking if clang supports -c -o file.o... yes
checking if clang supports -c -o file.o... (cached) yes
checking whether the clang linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes
checking dynamic linker characteristics... darwin13.0.2 dyld
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking whether we are using the GNU C++ compiler... yes
checking whether clang++ accepts -g... yes
checking dependency style of clang++... none
checking how to run the C++ preprocessor... clang++ -E
checking for ld used by clang++... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
checking if the linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) is GNU ld... no
checking whether the clang++ linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes
checking for clang++ option to produce PIC... -fno-common -DPIC
checking if clang++ PIC flag -fno-common -DPIC works... yes
checking if clang++ static flag -static works... no
checking if clang++ supports -c -o file.o... yes
checking if clang++ supports -c -o file.o... (cached) yes
checking whether the clang++ linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes
checking dynamic linker characteristics... darwin13.0.2 dyld
checking how to hardcode library paths into programs... immediate
checking whether make supports nested variables... yes
checking assert.h usability... yes
checking assert.h presence... yes
checking for assert.h... yes
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking io.h usability... no
checking io.h presence... no
checking for io.h... no
checking limits.h usability... yes
checking limits.h presence... yes
checking for limits.h... yes
checking malloc.h usability... no
checking malloc.h presence... no
checking for malloc.h... no
checking search.h usability... yes
checking search.h presence... yes
checking for search.h... yes
checking sys/time.h usability... yes
checking sys/time.h presence... yes
checking for sys/time.h... yes
checking for unistd.h... (cached) yes
checking for an ANSI C-conforming const... yes
checking for inline... inline
checking whether byte ordering is bigendian... no
checking for off_t... yes
checking for size_t... yes
checking whether time.h and sys/time.h may both be included... yes
checking whether struct tm is in sys/time.h or time.h... time.h
checking size of signed short... 2
checking size of unsigned short... 2
checking size of signed int... 4
checking size of unsigned int... 4
checking size of signed long... 8
checking size of unsigned long... 8
checking size of signed long long... 8
checking size of unsigned long long... 8
checking size of unsigned char *... 8
checking for signed 8-bit type... signed char
checking for unsigned 8-bit type... unsigned char
checking for signed 16-bit type... signed short
checking for unsigned 16-bit type... unsigned short
checking for signed 32-bit type... signed int
checking for unsigned 32-bit type... unsigned int
checking for signed 64-bit type... signed long
checking for unsigned 64-bit type... unsigned long
checking for signed size type... signed long
checking for ptrdiff_t... yes
checking for pointer difference type... ptrdiff_t
checking for int8... no
checking for int16... no
checking for int32... no
checking for floor... yes
checking for isascii... yes
checking for memmove... yes
checking for memset... yes
checking for mmap... yes
checking for pow... yes
checking for setmode... yes
checking for sqrt... yes
checking for strchr... yes
checking for strrchr... yes
checking for strstr... yes
checking for strtol... yes
checking for strtoull... yes
checking for getopt... yes
checking for strcasecmp... yes
checking for strtoul... yes
checking for strtoull... (cached) yes
checking for lfind... yes
checking native cpu bit order... lsb2msb
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking for inflateEnd in -lz... yes
checking zlib.h usability... yes
checking zlib.h presence... yes
checking for zlib.h... yes
checking for jpeg_read_scanlines in -ljpeg... yes
checking jpeglib.h usability... yes
checking jpeglib.h presence... yes
checking for jpeglib.h... yes
checking for jbg_dec_init in -ljbig... no
checking jbig.h usability... no
checking jbig.h presence... no
checking for jbig.h... no
checking for X... disabled
checking whether pthreads work with -pthread... yes
checking for joinable pthread attribute... PTHREAD_CREATE_JOINABLE
checking if more special flags are required for pthreads... -D_THREAD_SAFE
checking whether we are using the Microsoft C compiler... no
checking GL/gl.h usability... no
checking GL/gl.h presence... no
checking for GL/gl.h... no
checking OpenGL/gl.h usability... yes
checking OpenGL/gl.h presence... yes
checking for OpenGL/gl.h... yes
checking windows.h usability... no
checking windows.h presence... no
checking for windows.h... no
checking for OpenGL library... -lGL
checking GL/glu.h usability... no
checking GL/glu.h presence... no
checking for GL/glu.h... no
checking OpenGL/glu.h usability... yes
checking OpenGL/glu.h presence... yes
checking for OpenGL/glu.h... yes
checking for OpenGL Utility library... -lGLU
checking for varargs GLU tesselator callback function type... no
checking GL/glut.h usability... no
checking GL/glut.h presence... no
checking for GL/glut.h... no
checking GLUT/glut.h usability... yes
checking GLUT/glut.h presence... yes
checking for GLUT/glut.h... yes
checking for GLUT library... -framework GLUT
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating build/Makefile
config.status: creating contrib/Makefile
config.status: creating contrib/addtiffo/Makefile
config.status: creating contrib/dbs/Makefile
config.status: creating contrib/dbs/xtiff/Makefile
config.status: creating contrib/iptcutil/Makefile
config.status: creating contrib/mfs/Makefile
config.status: creating contrib/pds/Makefile
config.status: creating contrib/ras/Makefile
config.status: creating contrib/stream/Makefile
config.status: creating contrib/tags/Makefile
config.status: creating contrib/win_dib/Makefile
config.status: creating html/Makefile
config.status: creating html/images/Makefile
config.status: creating html/man/Makefile
config.status: creating libtiff-4.pc
config.status: creating libtiff/Makefile
config.status: creating man/Makefile
config.status: creating port/Makefile
config.status: creating test/Makefile
config.status: creating tools/Makefile
config.status: creating libtiff/tif_config.h
config.status: creating libtiff/tiffconf.h
config.status: executing depfiles commands
config.status: executing libtool commands

Libtiff is now configured for i386-apple-darwin13.0.2

  Installation directory:             /usr/local/Cellar/libtiff/4.0.3
  Documentation directory:            ${prefix}/share/doc/tiff-4.0.3
  C compiler:                         clang -g -O2 -Wall -W
  C++ compiler:                       clang++ -g -O2
  Enable runtime linker paths:        no
  Enable linker symbol versioning:    no
  Support Microsoft Document Imaging: yes
  Use win32 IO:                       no

 Support for internal codecs:
  CCITT Group 3 & 4 algorithms:       yes
  Macintosh PackBits algorithm:       yes
  LZW algorithm:                      yes
  ThunderScan 4-bit RLE algorithm:    yes
  NeXT 2-bit RLE algorithm:           yes
  LogLuv high dynamic range encoding: yes

 Support for external codecs:
  ZLIB support:                       yes
  Pixar log-format algorithm:         yes
  JPEG support:                       yes
  Old JPEG support:                   yes
  JPEG 8/12 bit dual mode:            no
  ISO JBIG support:                   no
  LZMA2 support:                      no

  C++ support:                        yes

  OpenGL support:                     no

